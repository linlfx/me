站点等待的时间：
1. 数据在网络上传输的时间；
2. 服务器处理请求并生成回应数据的时间；
3. 浏览器计算和渲染的时间。

同步阻塞I/O：等待数据的就绪和等待数据的复制。
同步非阻塞I/O：不等待数据的就绪(只对网络IO有效，CPU不停检查网卡缓冲区，没有数据立即返回)，等待数据的复制。
多路I/O就绪通知：快速获取所有就绪的文件描述符，之后再用阻塞或非阻塞I/O获取数据，通常是非阻塞，防止因为意外阻塞进程。
多路I/O就绪通知的实现：
select：几乎所有平台都支持，默认最大限制1024个文件描述符，开销随文件描述符数量的增大而线性增长。
poll：和select本质上相似，但没有最大文件描述符的限制。
SIGIO：由实时信号来触发，信号代表事件，在内核的事件队列中，它只通知一次，如果没处理也不再通知，另外事件队列有长度限制。这是Linux2.4下性能最好的多路I/O就绪通知方法。
/dev/poll：Sun在Solaris中的实现方法，使用虚拟的/dev/poll设备监视文件描述符，通过事件通知，有点类似SIGIO。在服务器负载较大时性能不够稳定。
/dev/epoll：以补丁形式出现在Linux 2.4上，类似/dev/poll，但性能更好。
epoll：Linux 2.6内核直接支持的实现方法，具备之前所说的一切优点。支持水平触发和边缘触发，边缘触发性能更高一点，但代码实现复杂，容易出错。
kqueue：FreeBSD中的实现，同时支持水平触发和边缘触发，性能与epoll接近。
异步I/O：阻塞和非阻塞是关于数据是否就绪；同步和异步是指访问数据的机制。同步是主动请求并等待I/O操作完毕，在读写时必须阻塞；异步是主动请求数据后便可以去处理其他任务，随后等待I/O操作完毕的通知，进程在数据读写时不阻塞。POSIX标准库中定义了AIO，linux2.6.16实现了AIO。

浏览器缓存：
1. 当服务器响应头中有Last-Modified时，浏览器请求头中包含If-Modified-Since，这时服务器要根据文件日期判断有没有更新过，没更新过返回304。

2. 当服务器响应头中有ETag时，浏览器请求头中包含If-None-Match，这时服务器要再计算这个文件的ETag，如果相同则返回304。
www
3. 当服务器响应头中有Expires时，浏览器无需在过期之前询问服务器，这个Expires是个绝对日期，Web服务器默认情况下不会开始Expires标记的支持。

4. 当服务器响应头中有Cache-Control: max-age=<second>时，浏览器根据自身时间及Cache-Control中的相对时间来决定缓存是否有效，Cache-Control的单位是秒。Web服务器在开启Expires时也会自动添加Cache-Control标记，浏览器会优先判断Cache-Control。

SSI：在Web服务器端组装内容
ESI：在HTTP代理服务器上组装内容
更好的方案：AJAX

DNS负载均衡：
1. 轮询：1个域名设置多个A记录，以轮询方式访问这几个A记录的IP。
2. 智能解析：1个域名设置多个A记录，DNS服务器根据用户IP寻找离用户最近的一台服务器。

DNS的TTL为对DNS记录修改的生效时间，通常为3600（1小时）。
DDNS：为我们自动化远程修改DNS记录提供可能。（DNS负载均衡中本身都没有健康检查，如果有服务器当机，就要从DNS中移除该A记录）

反向代理服务器：工作在HTTP层(应用层)，实际服务器称为后端服务器(Back-end Server)。

DNAT：修改IP数据包。Linux下通过Netfilter/iptables实现，Netfilter工作在内核，iptables是工作在用户空间的命令行工具，用来对Netfilter的过滤表进行操作。

IPVS/ipvsadm：(IP Virtual Server)，工作性质类似Netfilter，更专注于实现IP负载均衡。
1. LVS-NAT：基于NAT的负载均衡系统。转发数据包工作在内核中，可以不考虑额外的开销，转发能力主要取决于NAT服务器的网络带宽，包括内部网络和外部网络。
2. LVS-DR：直接路由，负载均衡调度器工作在数据链路层，通过修改数据包的MAC地址发送到实际服务器，实际服务器的响应数据包将直接发给客户端。实际服务器要连入外网，并配置IP别名。LVS-DR与DNS-RR有类似功能，如果LVS-DR调度器失效，可以马上增加几条DNS记录切换到DNS-RR，等调度器恢复后再切换回来。
3. LVS-TUN：IP隧道，调度器将收到的IP数据包封装在一个新的IP数据包中转交给实际服务器，实际服务器响应数据包可直接到达用户端。服务器必须支持IP Tunneling或IP Encapsulation协议。

文件共享：NFS服务器，容易搭建，减少冗余，并发处理能力较差。

文件分发：
SCP
WebDAV：基于HTTP，类似RESTful风格。
rsync：被动分发，由接收文件的一端发起同步请求，可设置crontab定时任务。



